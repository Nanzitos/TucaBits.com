name: Pipeline CI/CD

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main
permissions:
    id-token: write
    contents: read

jobs:
    job1:
        name: Build ECR
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v5.0.0

            - name: "Configure AWS Credentials"
              uses: aws-actions/configure-aws-credentials@v4.3.1
              with:
                role-to-assume: arn:aws:iam::502830477144:role/GitHubActionsRepoApp
                aws-region: us-east-2

            - name: Amazon ECR "Login" Action for GitHub Actions
              uses: aws-actions/amazon-ecr-login@v2.0.1

            - name: Build, Tag and Push image to ECR
              run: |
                docker build -t tucabits_prod:v1.0 .
                docker tag tucabits_prod:v1.0 502830477144.dkr.ecr.us-east-2.amazonaws.com/tucabits_prod:v1.0
                docker push 502830477144.dkr.ecr.us-east-2.amazonaws.com/tucabits_prod:v1.0
    job2:
        name: Deploy EC2
        needs: job1
        env:
            INSTANCE_KEY: ${{secrets.INSTANCE_KEY}}
            PUBLIC_IP: ${{secrets.PUBLIC_IP}}
        runs-on: ubuntu-latest
        steps:
            - name: Deploy EC2 SSH
              run: |
                echo "$INSTANCE_KEY" > chave-site.pem
                chmod 400 chave-site.pem
                ssh -i chave-site.pem -o StrictHostKeyChecking=no ec2-user@$PUBLIC_IP << EOF
                    aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 502830477144.dkr.ecr.us-east-2.amazonaws.com
                    docker pull 502830477144.dkr.ecr.us-east-2.amazonaws.com/tucabits_prod:v1.0
                    docker run -d -p 80:80 --name site 502830477144.dkr.ecr.us-east-2.amazonaws.com/tucabits_prod:v1.0
                    docker ps
                EOF
                rm chave-site.pem
